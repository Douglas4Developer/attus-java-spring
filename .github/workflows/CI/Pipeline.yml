name: CI/CD Pipeline

# Rodar o pipeline sempre que houver push ou pull request para o branch main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Definindo os jobs para o pipeline
jobs:
  build:
    # O job será rodado em um runner do Ubuntu
    runs-on: ubuntu-latest

    # Definindo as etapas (steps) do job
    steps:
      # Baixar o código do repositório
      - name: Checar código do repositório
        uses: actions/checkout@v3

      # Configurar o JDK 17 para rodar o projeto
      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Rodar o build do projeto com Maven
      - name: Build com Maven
        run: mvn clean install

      # Rodar os testes com Jacoco para gerar cobertura de testes
      - name: Executar Testes e Cobertura Jacoco
        run: mvn clean verify

      # Publicar os relatórios de teste
      - name: Publicar Relatório de Testes
        uses: actions/upload-artifact@v3
        with:
          name: relatório-junit
          path: target/surefire-reports

      # Publicar os relatórios de cobertura Jacoco
      - name: Publicar Relatório de Cobertura Jacoco
        uses: actions/upload-artifact@v3
        with:
          name: cobertura-jacoco
          path: target/site/jacoco

      # Fazer análise de código com o SonarQube
      - name: Análise de Código com SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Token armazenado nas secrets do GitHub
        run: mvn sonar:sonar \
          -Dsonar.projectKey=attus-backend \
          -Dsonar.host.url=http://localhost:9000 \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  deploy:
    # O deploy será rodado somente se o build passar com sucesso
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Aqui você pode definir como deseja fazer o deploy, por exemplo:
      # - Subir para um servidor de produção
      # - Utilizar Kubernetes, Docker, ou qualquer outra ferramenta de deploy
      # Exemplo de deploy para o Docker Hub:
      - name: Logar no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build da Imagem Docker
        run: docker build -t attus-backend:latest .

      - name: Fazer Push da Imagem para Docker Hub
        run: docker push attus-backend:latest
